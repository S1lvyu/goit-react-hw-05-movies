{"version":3,"file":"static/js/483.5046a62a.chunk.js","mappings":"+SAMMA,EAAU,mCACVC,EACJ,sNAEFC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASH,GAGX,IAAMI,EAAe,mCAAG,+GAEGF,EAAAA,EAAAA,IAdN,gDAc8B,CAC7CG,OAAQ,CACNF,QAASH,EACTM,aAAcL,KALE,cAEdM,EAFc,OAQdC,EAAOD,EAASC,KARF,kBASbA,GATa,oGAAH,qDAcfC,EAAY,mCAAG,WAAMC,GAAN,gGAEMR,EAAAA,EAAAA,IA3BR,4CA2B8B,CAC3CG,OAAQ,CACNF,QAASH,EACTM,aAAcL,EACdU,MAAOD,KANM,cAEXH,EAFW,yBASVA,EAASC,KAAKI,SATJ,oGAAH,sDAeZC,EAAgB,mCAAG,WAAMC,GAAN,gFACjBC,EADiB,UAvCC,uCAuCD,OACYD,GADZ,kBAGEZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANG,cAGfM,EAHe,yBASdA,EAASC,MATK,oGAAH,sDAchBQ,EAAW,mCAAG,WAAMF,GAAN,gFACZC,EADY,6CACgCD,EADhC,8BAGOZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANF,cAGVM,EAHU,yBASTA,EAASC,MATA,oGAAH,sDAcXS,EAAc,mCAAG,WAAMH,GAAN,gFACfC,EADe,6CAC6BD,EAD7B,8BAGIZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANC,cAGbM,EAHa,yBASZA,EAASC,MATG,oGAAH,qD,sICtEpB,EAAkC,8BAAlC,EAAuE,mBAAvE,EAAwG,0BAAxG,EAA+I,yBAA/I,EAAqL,yB,2BCMtK,SAASU,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMT,GAAYU,EAAAA,EAAAA,MAAZV,QAiBN,OAfAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBH,GAAa,GADG,mBAGOP,EAAAA,EAAAA,IAAYF,GAHnB,OAGRa,EAHQ,OAIdN,EAAYM,EAAOC,MACnBL,GAAa,GALC,gDAOdM,QAAQC,MAAR,MAPc,yDAAH,qDAWfJ,GACD,GAAE,CAACZ,KAGF,gBAAKiB,UAAWC,EAAhB,SACGV,GACC,SAACW,EAAA,EAAD,IACEb,GAAYA,EAASc,OAAS,EAChCd,EAASe,KAAI,SAAAC,GAAI,OACf,iBAAmBL,UAAWC,EAA9B,WACE,gBACEK,IACED,EAAKE,aAAL,0CACuCF,EAAKE,c,ixFAG9CC,IAAKH,EAAKI,KACVC,MAAM,QACNV,UAAWC,KAEb,eAAGD,UAAWC,EAAd,UACG,KACD,iBAAMD,UAAWC,EAAjB,SAAoC,UAAY,IAAEI,EAAKI,SAEzD,eAAGT,UAAWC,EAAd,UACG,KACD,iBAAMD,UAAWC,EAAjB,SAAoC,UAAY,IAAEI,EAAKM,eAjBjDN,EAAKO,GADA,KAuBjB,SAACC,EAAA,EAAD,CAASC,QAAQ,yBAIxB,C,iEC1DD,EAA0B,yB,SCCX,SAASD,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,OAAO,eAAGd,UAAWC,EAAd,UAA+Ba,EAAQ,MAC/C,C","sources":["API/API.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst MOVIE_DETAILS_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '9a53726f9c5cec2b7f692cae8959d58c';\nconst ACCESS_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTUzNzI2ZjljNWNlYzJiN2Y2OTJjYWU4OTU5ZDU4YyIsInN1YiI6IjY0ZmM2Y2ZmZWZlYTdhMDExYWI2MmM0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nYiSEEFRJdB_Upus9JnQTZN7wyZg5kxTiQPVbc7tqyY';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getTrendingData = async () => {\n  try {\n    const response = await axios.get(TRENDING_URL, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    const data = response.data;\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst searchMovies = async searchQuerry => {\n  try {\n    const response = await axios.get(SEARCH_URL, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n        query: searchQuerry,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getMoviesDetails = async movieId => {\n  const url = `${MOVIE_DETAILS_URL}${movieId}`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst getCastData = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst getReviewsData = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport {\n  getTrendingData,\n  searchMovies,\n  getMoviesDetails,\n  getCastData,\n  getReviewsData,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main__container\":\"Cast_main__container__aaGE1\",\"card\":\"Cast_card__WlXfx\",\"card__image\":\"Cast_card__image__JMMl1\",\"card__text\":\"Cast_card__text__Iyuwv\",\"card__span\":\"Cast_card__span__zzR1-\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastData } from 'API/API';\nimport userImage from '../../assets/user.png';\nimport styles from './Cast.module.css';\nimport Message from 'components/Message/Message';\nimport Loader from 'components/Loader/Loader';\nexport default function Cast() {\n  const [castData, setCastData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getCastData(movieId);\n        setCastData(result.cast);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div className={styles.main__container}>\n      {isLoading ? (\n        <Loader />\n      ) : castData && castData.length > 0 ? (\n        castData.map(item => (\n          <div key={item.id} className={styles.card}>\n            <img\n              src={\n                item.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                  : userImage\n              }\n              alt={item.name}\n              width=\"150px\"\n              className={styles.card__image}\n            />\n            <p className={styles.card__text}>\n              {' '}\n              <span className={styles.card__span}>Name:</span> {item.name}\n            </p>\n            <p className={styles.card__text}>\n              {' '}\n              <span className={styles.card__span}>Role:</span> {item.character}\n            </p>\n          </div>\n        ))\n      ) : (\n        <Message message=\"There are no actors\" />\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__fh13J\"};","import React from 'react';\nimport styles from './Message.module.css';\nexport default function Message({ message }) {\n  return <p className={styles.message}>{message} </p>;\n}\n"],"names":["API_KEY","ACCESS_TOKEN","axios","api_key","getTrendingData","params","access_token","response","data","searchMovies","searchQuerry","query","results","getMoviesDetails","movieId","url","getCastData","getReviewsData","Cast","useState","castData","setCastData","isLoading","setIsLoading","useParams","useEffect","fetchData","result","cast","console","error","className","styles","Loader","length","map","item","src","profile_path","alt","name","width","character","id","Message","message"],"sourceRoot":""}