{"version":3,"file":"static/js/168.1de18e94.chunk.js","mappings":"+SAMMA,EAAU,mCACVC,EACJ,sNAEFC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASH,GAGX,IAAMI,EAAe,mCAAG,+GAEGF,EAAAA,EAAAA,IAdN,gDAc8B,CAC7CG,OAAQ,CACNF,QAASH,EACTM,aAAcL,KALE,cAEdM,EAFc,OAQdC,EAAOD,EAASC,KARF,kBASbA,GATa,oGAAH,qDAcfC,EAAY,mCAAG,WAAMC,GAAN,gGAEMR,EAAAA,EAAAA,IA3BR,4CA2B8B,CAC3CG,OAAQ,CACNF,QAASH,EACTM,aAAcL,EACdU,MAAOD,KANM,cAEXH,EAFW,yBASVA,EAASC,KAAKI,SATJ,oGAAH,sDAeZC,EAAgB,mCAAG,WAAMC,GAAN,gFACjBC,EADiB,UAvCC,uCAuCD,OACYD,GADZ,kBAGEZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANG,cAGfM,EAHe,yBASdA,EAASC,MATK,oGAAH,sDAchBQ,EAAW,mCAAG,WAAMF,GAAN,gFACZC,EADY,6CACgCD,EADhC,8BAGOZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANF,cAGVM,EAHU,yBASTA,EAASC,MATA,oGAAH,sDAcXS,EAAc,mCAAG,WAAMH,GAAN,gFACfC,EADe,6CAC6BD,EAD7B,8BAGIZ,EAAAA,EAAAA,IAAUa,EAAK,CACpCV,OAAQ,CACNF,QAASH,EACTM,aAAcL,KANC,cAGbM,EAHa,yBASZA,EAASC,MATG,oGAAH,qD,iECtEpB,EAA0B,yB,SCCX,SAASU,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,OAAO,eAAGC,UAAWC,EAAd,UAA+BF,EAAQ,MAC/C,C,sICHD,EAAkC,iCAAlC,EAAkF,8BAAlF,EAA+H,8BAA/H,EAA4K,8B,2BCK7J,SAASG,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMb,GAAYc,EAAAA,EAAAA,MAAZd,QAgBN,OAfAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBH,GAAa,GADG,mBAGOV,EAAAA,EAAAA,IAAeH,GAHtB,OAGRiB,EAHQ,OAIdN,EAAeM,EAAOnB,SACtBe,GAAa,GALC,gDAOdK,QAAQC,MAAR,MAPc,yDAAH,qDAWfH,GACD,GAAE,CAAChB,KAGF,gBAAKM,UAAWC,EAAhB,SACGK,GACC,SAACQ,EAAA,EAAD,IACEV,GAAeA,EAAYW,OAAS,EACtCX,EAAYY,KAAI,SAAAC,GAAI,OAClB,iBAAmBjB,UAAWC,EAA9B,WACE,eAAGD,UAAWC,EAAd,UACG,KACD,iBAAMD,UAAWC,EAAjB,SAAsC,YAAc,IAAEgB,EAAKC,WAE7D,eAAGlB,UAAWC,EAAd,UACG,KACD,iBAAMD,UAAWC,EAAjB,SAAsC,iBAAoB,IACzDgB,EAAKE,WAAWC,MAAM,EAAG,QAE5B,cAAGpB,UAAWC,EAAd,SAAoCgB,EAAKI,YAVjCJ,EAAKK,GADG,KAepB,SAACxB,EAAA,EAAD,CAASC,QAAQ,oBAIxB,C","sources":["API/API.js","webpack://goit-react-hw-05-movies/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst MOVIE_DETAILS_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '9a53726f9c5cec2b7f692cae8959d58c';\nconst ACCESS_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTUzNzI2ZjljNWNlYzJiN2Y2OTJjYWU4OTU5ZDU4YyIsInN1YiI6IjY0ZmM2Y2ZmZWZlYTdhMDExYWI2MmM0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nYiSEEFRJdB_Upus9JnQTZN7wyZg5kxTiQPVbc7tqyY';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getTrendingData = async () => {\n  try {\n    const response = await axios.get(TRENDING_URL, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    const data = response.data;\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst searchMovies = async searchQuerry => {\n  try {\n    const response = await axios.get(SEARCH_URL, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n        query: searchQuerry,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst getMoviesDetails = async movieId => {\n  const url = `${MOVIE_DETAILS_URL}${movieId}`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst getCastData = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst getReviewsData = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        access_token: ACCESS_TOKEN,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport {\n  getTrendingData,\n  searchMovies,\n  getMoviesDetails,\n  getCastData,\n  getReviewsData,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__fh13J\"};","import React from 'react';\nimport styles from './Message.module.css';\nexport default function Message({ message }) {\n  return <p className={styles.message}>{message} </p>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main__container\":\"Reviews_main__container__qILJy\",\"review__card\":\"Reviews_review__card__nR17z\",\"review__text\":\"Reviews_review__text__ZnY17\",\"review__span\":\"Reviews_review__span__hpAnf\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsData } from 'API/API';\nimport styles from './Reviews.module.css';\nimport Message from 'components/Message/Message';\nimport Loader from 'components/Loader/Loader';\nexport default function Reviews() {\n  const [reviewsData, setReviewsData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  let { movieId } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getReviewsData(movieId);\n        setReviewsData(result.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div className={styles.main__container}>\n      {isLoading ? (\n        <Loader />\n      ) : reviewsData && reviewsData.length > 0 ? (\n        reviewsData.map(item => (\n          <div key={item.id} className={styles.review__card}>\n            <p className={styles.review__text}>\n              {' '}\n              <span className={styles.review__span}>Author:</span> {item.author}\n            </p>\n            <p className={styles.review__text}>\n              {' '}\n              <span className={styles.review__span}>Date Posted:</span>{' '}\n              {item.created_at.slice(0, 10)}\n            </p>\n            <p className={styles.review__text}>{item.content}</p>\n          </div>\n        ))\n      ) : (\n        <Message message=\"No Reviews yet\" />\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","ACCESS_TOKEN","axios","api_key","getTrendingData","params","access_token","response","data","searchMovies","searchQuerry","query","results","getMoviesDetails","movieId","url","getCastData","getReviewsData","Message","message","className","styles","Reviews","useState","reviewsData","setReviewsData","isLoading","setIsLoading","useParams","useEffect","fetchData","result","console","error","Loader","length","map","item","author","created_at","slice","content","id"],"sourceRoot":""}